name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    environment: dev
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_USE_SSL: ${{ secrets.EMAIL_USE_SSL }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and run services with Docker Compose
        working-directory: ./django_advanced
        run: |
          docker-compose up --build -d

      - name: View Docker Compose logs
        working-directory: ./django_advanced
        run: |
          docker-compose logs

      - name: Wait for Django server to be ready
        working-directory: ./django_advanced
        run: |
          echo "Waiting for Django server..."
          until curl -s http://localhost:8000 > /dev/null; do
            sleep 5
            echo "Waiting for Django server to be ready..."
          done
          echo "Django server is up and running!"

      - name: Run Tests
        working-directory: ./django_advanced
        run: |
          docker-compose exec -T web pytest --maxfail=5 --disable-warnings -v

      - name: Tear down Docker Compose
        working-directory: ./django_advanced
        run: |
          docker-compose down


  # test:
  #   runs-on: ubuntu-latest
  #   environment: dev

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2


  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Set up Docker Compose
  #       working-directory: ./django_rest_api
  #       run: |
  #         docker-compose up --build -d

  #     - name: Wait for services to be ready
  #       working-directory: ./django_rest_api
  #       run: |
  #         docker-compose exec -T django bash -c "until nc -z localhost 8000; do sleep 1; done"

  #     - name: Run Tests
  #       working-directory: ./django_rest_api
  #       run: |
  #         docker-compose exec django pytest --maxfail=5 --disable-warnings -v

  #     - name: Tear down services
  #       if: always()
  #       working-directory: ./django_rest_api
  #       run: |
  #         docker-compose down